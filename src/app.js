// formatting the timestamp from the api
function formatTime(timestamp) {
  let date = new Date(timestamp);
  let hours = date.getHours();
  if (hours < 10) {
    hours = `0${hours}`;
  }
  let minutes = date.getMinutes();
  if (minutes < 10) {
    minutes = `0${minutes}`;
  }
  let days = [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday",
  ];
  let day = days[date.getDay()];
  let dateC = date.getDate();
  return `${day} ${dateC}, ${hours}:${minutes}`;
}

// set all the parameters of the current weather module
function displayTemperature(response) {
  let temperatureElement = document.querySelector("#temp");
  temperatureElement.innerHTML = Math.round(response.data.main.temp);
  let cityElement = document.querySelector("#city");
  cityElement.innerHTML = response.data.name;
  let descriptionElement = document.querySelector("#description");
  descriptionElement.innerHTML = response.data.weather[0].description;
  let windSpeedElement = document.querySelector("#wind-speed");
  windSpeedElement.innerHTML = Math.round(response.data.wind.speed);
  let currentTimeElement = document.querySelector("#current-time");
  currentTimeElement.innerHTML = formatTime(response.data.dt * 1000);
  let iconMainElement = document.querySelector("#icon-main");
  let description = response.data.weather[0].icon;
  if (["01d", "01n"].includes(description)) {
    iconMainElement.innerHTML = `<path d="m256 48c-8.836 0-16-7.164-16-16v-16c0-8.836 7.164-16 16-16 8.837 0 16 7.164 16 16v16c0 8.836-7.163 16-16 16z"/><path d="m97.608 113.608c-4.095 0-8.189-1.562-11.313-4.687l-11.314-11.313c-6.249-6.248-6.249-16.379 0-22.627 6.248-6.249 16.379-6.249 22.627 0l11.313 11.313c6.249 6.248 6.249 16.379 0 22.627-3.124 3.125-7.218 4.687-11.313 4.687z"/><path d="m32 272h-16c-8.836 0-16-7.164-16-16s7.164-16 16-16h16c8.836 0 16 7.164 16 16s-7.164 16-16 16z"/><path d="m86.294 441.706c-4.095 0-8.189-1.562-11.313-4.687-6.249-6.248-6.249-16.379 0-22.627l11.313-11.313c6.248-6.249 16.379-6.249 22.627 0 6.249 6.248 6.249 16.379 0 22.627l-11.313 11.313c-3.124 3.125-7.219 4.687-11.314 4.687z"/><path d="m256 512c-8.836 0-16-7.164-16-16v-16c0-8.836 7.164-16 16-16 8.837 0 16 7.164 16 16v16c0 8.836-7.163 16-16 16z"/><path d="m425.706 441.706c-4.095 0-8.188-1.562-11.313-4.686l-11.314-11.313c-6.248-6.248-6.249-16.378-.001-22.627s16.378-6.25 22.628-.001l11.314 11.313c6.248 6.248 6.249 16.378.001 22.627-3.125 3.124-7.22 4.687-11.315 4.687z"/><path d="m496 272h-16c-8.837 0-16-7.164-16-16s7.163-16 16-16h16c8.837 0 16 7.164 16 16s-7.163 16-16 16z"/><path d="m414.392 113.608c-4.096 0-8.189-1.562-11.314-4.687-6.248-6.249-6.247-16.379.001-22.627l11.314-11.313c6.249-6.249 16.379-6.248 22.628.001 6.248 6.249 6.247 16.379-.001 22.627l-11.314 11.313c-3.125 3.124-7.22 4.686-11.314 4.686z"/><path d="m256 440c-101.458 0-184-82.542-184-184s82.542-184 184-184 184 82.542 184 184-82.542 184-184 184zm0-336c-83.813 0-152 68.187-152 152s68.187 152 152 152 152-68.187 152-152-68.187-152-152-152z"/>`;
  } else if (["02d", "02n"].includes(description)) {
    iconMainElement.innerHTML = `<path d="m512 216c0-101.458-82.542-184-184-184-48.82 0-94.808 18.921-129.489 53.277-33.654 33.338-52.875 77.45-54.407 124.617-7.985 14.33-13.3 30.343-15.26 47.364-5.546-.837-11.171-1.258-16.844-1.258-61.757 0-112 50.243-112 112s50.243 112 112 112h288c61.757 0 112-50.243 112-112 0-24.572-7.96-47.316-21.429-65.803 14.04-26.439 21.429-56.003 21.429-86.197zm-184-152c83.813 0 152 68.187 152 152 0 21.543-4.555 42.689-13.256 62.115-18.653-13.886-41.755-22.115-66.744-22.115-5.673 0-11.298.421-16.844 1.258-7.332-63.663-61.56-113.258-127.156-113.258-26.439 0-51.028 8.061-71.447 21.848 20.851-59.181 77.47-101.848 143.447-101.848zm72 384h-288c-44.112 0-80-35.888-80-80s35.888-80 80-80c9.204 0 18.216 1.543 26.784 4.587 5.042 1.792 10.649.943 14.938-2.264 4.287-3.206 6.687-8.343 6.394-13.688-.078-1.423-.116-2.939-.116-4.635 0-52.935 43.065-96 96-96s96 43.065 96 96c0 1.696-.038 3.212-.115 4.635-.293 5.345 2.106 10.482 6.394 13.688s9.894 4.056 14.938 2.264c8.567-3.044 17.579-4.587 26.783-4.587 44.112 0 80 35.888 80 80s-35.888 80-80 80z"/>`;
  } else if (["03d", "03n"].includes(description)) {
    iconMainElement.innerHTML = `<path d="m400 424h-288c-61.757 0-112-50.243-112-112s50.243-112 112-112c5.673 0 11.297.421 16.844 1.258 7.332-63.663 61.561-113.258 127.156-113.258s119.824 49.595 127.156 113.258c5.547-.837 11.171-1.258 16.844-1.258 61.757 0 112 50.243 112 112s-50.243 112-112 112zm-288-192c-44.112 0-80 35.888-80 80s35.888 80 80 80h288c44.112 0 80-35.888 80-80s-35.888-80-80-80c-9.204 0-18.216 1.543-26.785 4.587-5.045 1.792-10.652.942-14.939-2.265s-6.687-8.345-6.393-13.691c.078-1.419.116-2.934.116-4.631 0-52.935-43.065-96-96-96s-96 43.065-96 96c0 1.697.038 3.212.116 4.631.294 5.346-2.105 10.484-6.393 13.691-4.287 3.207-9.894 4.057-14.939 2.265-8.567-3.044-17.579-4.587-26.783-4.587z"/>`;
  } else if (["04d", "04n"].includes(description)) {
    iconMainElement.innerHTML = `<path d="m400 424h-288c-61.757 0-112-50.243-112-112s50.243-112 112-112c5.673 0 11.297.421 16.844 1.258 7.332-63.663 61.561-113.258 127.156-113.258s119.824 49.595 127.156 113.258c5.547-.837 11.171-1.258 16.844-1.258 61.757 0 112 50.243 112 112s-50.243 112-112 112zm-288-192c-44.112 0-80 35.888-80 80s35.888 80 80 80h288c44.112 0 80-35.888 80-80s-35.888-80-80-80c-9.204 0-18.216 1.543-26.785 4.587-5.045 1.792-10.652.942-14.939-2.265s-6.687-8.345-6.393-13.691c.078-1.419.116-2.934.116-4.631 0-52.935-43.065-96-96-96s-96 43.065-96 96c0 1.697.038 3.212.116 4.631.294 5.346-2.105 10.484-6.393 13.691-4.287 3.207-9.894 4.057-14.939 2.265-8.567-3.044-17.579-4.587-26.783-4.587z"/>`;
  } else if (["09d", "09n"].includes(description)) {
    iconMainElement.innerHTML = `<path d="m432 392c-8.837 0-16-7.164-16-16 0-88.224-71.775-160-160-160s-160 71.776-160 160c0 8.836-7.163 16-16 16s-16-7.164-16-16c0-105.869 86.131-192 192-192s192 86.131 192 192c0 8.836-7.163 16-16 16z"/><path d="m368 392c-8.837 0-16-7.164-16-16 0-52.935-43.065-96-96-96s-96 43.065-96 96c0 8.836-7.163 16-16 16s-16-7.164-16-16c0-70.58 57.421-128 128-128s128 57.42 128 128c0 8.836-7.163 16-16 16z"/><path d="m496 392c-8.837 0-16-7.164-16-16 0-123.514-100.486-224-224-224s-224 100.486-224 224c0 8.836-7.163 16-16 16s-16-7.164-16-16c0-68.381 26.629-132.668 74.98-181.02 48.352-48.352 112.639-74.98 181.02-74.98s132.668 26.628 181.02 74.98c48.351 48.352 74.98 112.639 74.98 181.02 0 8.836-7.163 16-16 16z"/><path d="m304 392c-8.837 0-16-7.164-16-16 0-17.645-14.355-32-32-32s-32 14.355-32 32c0 8.836-7.163 16-16 16s-16-7.164-16-16c0-35.29 28.71-64 64-64s64 28.71 64 64c0 8.836-7.163 16-16 16z"/>`;
  } else if (["10d", "10n"].includes(description)) {
    iconMainElement.innerHTML = `<path d="m400.001 336h-288c-61.757 0-112-50.243-112-112s50.243-112 112-112c5.673 0 11.298.421 16.844 1.258 7.332-63.663 61.56-113.258 127.156-113.258s119.824 49.595 127.156 113.258c5.546-.837 11.171-1.258 16.844-1.258 61.757 0 112 50.243 112 112s-50.243 112-112 112zm-288-192c-44.112 0-80 35.888-80 80s35.888 80 80 80h288c44.112 0 80-35.888 80-80s-35.888-80-80-80c-9.204 0-18.216 1.543-26.784 4.587-5.044 1.792-10.65.943-14.938-2.264-4.287-3.206-6.687-8.343-6.394-13.688.077-1.423.115-2.939.115-4.635 0-52.935-43.065-96-96-96s-96 43.065-96 96c0 1.696.038 3.212.115 4.635.293 5.345-2.106 10.482-6.394 13.688-4.288 3.207-9.896 4.055-14.938 2.264-8.566-3.044-17.578-4.587-26.782-4.587z"/><path d="m215.986 424.001c-3.05 0-6.133-.87-8.86-2.688-7.353-4.902-9.34-14.836-4.438-22.188l16-24c4.902-7.353 14.837-9.339 22.188-4.438 7.353 4.902 9.34 14.836 4.438 22.188l-16 24c-3.084 4.625-8.158 7.126-13.328 7.126z"/><path d="m79.986 424.001c-3.05 0-6.133-.87-8.86-2.688-7.353-4.902-9.34-14.836-4.438-22.188l16-24c4.901-7.353 14.837-9.339 22.188-4.438 7.353 4.902 9.34 14.836 4.438 22.188l-16 24c-3.084 4.625-8.158 7.126-13.328 7.126z"/><path d="m367.986 424.001c-3.05 0-6.133-.87-8.86-2.688-7.353-4.902-9.34-14.836-4.438-22.188l16-24c4.902-7.353 14.836-9.339 22.188-4.438 7.353 4.902 9.34 14.836 4.438 22.188l-16 24c-3.084 4.625-8.158 7.126-13.328 7.126z"/><path d="m215.986 512.001c-3.05 0-6.133-.87-8.86-2.688-7.353-4.902-9.34-14.836-4.438-22.188l16-24c4.902-7.353 14.837-9.339 22.188-4.438 7.353 4.902 9.34 14.836 4.438 22.188l-16 24c-3.084 4.625-8.158 7.126-13.328 7.126z"/><path d="m287.986 456.001c-3.05 0-6.133-.87-8.86-2.688-7.353-4.902-9.34-14.836-4.438-22.188l16-24c4.901-7.353 14.837-9.338 22.188-4.438 7.353 4.902 9.34 14.836 4.438 22.188l-16 24c-3.084 4.625-8.158 7.126-13.328 7.126z"/><path d="m359.986 512.001c-3.05 0-6.133-.87-8.86-2.688-7.353-4.902-9.34-14.836-4.438-22.188l16-24c4.901-7.353 14.836-9.339 22.188-4.438 7.353 4.902 9.34 14.836 4.438 22.188l-16 24c-3.084 4.625-8.158 7.126-13.328 7.126z"/><path d="m143.986 456.001c-3.05 0-6.133-.87-8.86-2.688-7.353-4.902-9.34-14.836-4.438-22.188l16-24c4.901-7.353 14.836-9.338 22.188-4.438 7.353 4.902 9.34 14.836 4.438 22.188l-16 24c-3.084 4.625-8.158 7.126-13.328 7.126z"/><path d="m71.986 512.001c-3.05 0-6.133-.87-8.86-2.688-7.353-4.902-9.34-14.836-4.438-22.188l16-24c4.901-7.353 14.837-9.339 22.188-4.438 7.353 4.902 9.34 14.836 4.438 22.188l-16 24c-3.084 4.625-8.158 7.126-13.328 7.126z"/>`;
  } else if (["11d", "11n"].includes(description)) {
    iconMainElement.innerHTML = `<path d="m256 0c-105.869 0-192 86.131-192 192v66c0 25.364 20.636 46 46 46h93.263c2.036 9.344 4.804 23.079 6.943 37.574 6.962 47.166.749 57.149.48 57.551-18.162 27.244-18.686 46.742-18.686 48.875 0 35.29 28.71 64 64 64s64-28.71 64-64c0-2.133-.524-21.631-18.687-48.875-.268-.402-6.482-10.385.48-57.551 2.139-14.494 4.907-28.23 6.943-37.574h93.264c25.364 0 46-20.636 46-46v-66c0-105.869-86.131-192-192-192zm-32 448s.002.06 0 .177c0-.059 0-.118 0-.177zm64 .177c-.002-.118 0-.177 0-.177zm-13.313-31.302c12.031 18.046 13.223 30.196 13.312 31.383-.139 17.527-14.44 31.742-31.999 31.742s-31.86-14.215-31.999-31.742c.089-1.188 1.281-13.337 13.312-31.383 5.76-8.64 12.494-26.355 4.514-80.22-1.793-12.106-3.959-23.554-5.842-32.655h40.03c-1.883 9.102-4.049 20.549-5.842 32.655-7.98 53.865-1.246 71.58 4.514 80.22zm141.313-158.875c0 7.72-6.28 14-14 14h-106-80-106c-7.72 0-14-6.28-14-14v-66c0-88.224 71.776-160 160-160s160 71.776 160 160z"/>`;
  } else if (["13d", "13n"].includes(description)) {
    iconMainElement.innerHTML = `<path d="m367.588 144.109-62.088-114.627c-4.836-8.931-11.998-16.386-20.678-21.539-8.702-5.196-18.669-7.943-28.822-7.943-20.685 0-39.652 11.296-49.499 29.479l-62.091 114.633c-10.587 19.556-18.723 40.387-24.179 61.917-5.462 21.547-8.231 43.742-8.231 65.971 0 8.836 7.164 16 16 16h80.679c2.918 17.315 15.132 31.506 31.321 37.248v18.752h-4c-19.851 0-36 16.149-36 36v76c0 30.878 25.122 56 56 56 30.879 0 56-25.122 56-56v-76c0-19.851-16.149-36-36-36h-4v-18.752c16.189-5.741 28.402-19.933 31.321-37.248h80.679c8.837 0 16-7.164 16-16 0-44.513-11.208-88.737-32.412-127.891zm-87.588 235.891v76c0 13.234-10.767 24-24 24-13.234 0-24-10.766-24-24v-76c0-2.206 1.794-4 4-4h40c2.206 0 4 1.794 4 4zm-8-100c0 8.822-7.178 16-16 16s-16-7.178-16-16v-16c0-8.822 7.178-16 16-16s16 7.178 16 16zm31.321-24c-3.821-22.671-23.579-40-47.321-40-23.741 0-43.499 17.329-47.321 40h-64.136c.964-14.199 3.208-28.306 6.707-42.109 4.806-18.964 11.973-37.315 21.299-54.54l62.09-114.631c4.249-7.846 12.434-12.72 21.361-12.72 4.379 0 8.673 1.182 12.451 3.438 3.744 2.223 6.825 5.432 8.91 9.283l62.089 114.628c16.133 29.79 25.696 62.911 28.003 96.651z"/>`;
  } else if (["50d", "50n"].includes(description)) {
    iconMainElement.innerHTML = `<path d="m503.159 206.318c7.904-3.952 11.107-13.563 7.155-21.466-3.95-7.903-13.561-11.105-21.466-7.156l-6.949 3.475c-10.525-11.238-23.56-20.445-38.706-26.653-27.362-11.215-63.464-13.655-96.571-6.527-30.451 6.556-53.92 20.138-67.944 38.965-7.343-1.957-14.926-2.948-22.674-2.948s-15.331.991-22.674 2.948c-14.024-18.827-37.493-32.409-67.944-38.965-33.107-7.128-69.208-4.688-96.571 6.527-15.146 6.208-28.181 15.415-38.706 26.653l-6.949-3.475c-7.903-3.953-17.515-.747-21.466 7.156-3.952 7.903-.749 17.514 7.155 21.466l2.837 1.418c-13.696 27.583-15.946 60.699-3.402 91.377 11.206 27.406 32.403 48.804 59.688 60.251 13.787 5.785 28.293 8.678 42.805 8.678 14.21 0 28.426-2.775 41.974-8.328 27.359-11.214 54.803-34.817 73.41-63.138 18.178-27.668 25.192-55.459 20.425-79.776 3.086-.521 6.229-.793 9.42-.793s6.334.273 9.42.793c-4.767 24.316 2.247 52.107 20.425 79.776 18.607 28.321 46.051 51.924 73.41 63.138 13.549 5.553 27.762 8.328 41.974 8.328 14.51 0 29.02-2.895 42.805-8.678 27.284-11.447 48.481-32.845 59.688-60.251 12.544-30.678 10.293-63.794-3.402-91.377zm-362.547 123.787c-19.465 7.978-40.866 7.889-60.262-.249-19.401-8.14-34.477-23.359-42.448-42.854-16.458-40.251 2.854-86.4 43.049-102.876 21.295-8.728 51.069-10.586 77.699-4.854 27.548 5.931 47.317 19.043 54.241 35.976 15.091 36.907-28.631 96.967-72.279 114.857zm333.493-43.103c-7.972 19.495-23.047 34.714-42.448 42.854-19.396 8.137-40.8 8.226-60.262.249-43.648-17.89-87.37-77.949-72.279-114.856 6.924-16.933 26.693-30.045 54.241-35.976 10.244-2.206 20.95-3.287 31.463-3.287 16.817 0 33.134 2.77 46.236 8.141 40.196 16.474 59.507 62.624 43.049 102.875z"/>`;
  }
  let windDirectionElement = document.querySelector("#wind-direction");
  let windDegrees = response.data.wind.deg;
  windDirectionElement.innerHTML = degToDir(windDegrees);

  // compares wind degrees value and returns a direction
  function degToDir(windDegrees) {
    if (windDegrees >= 12 && windDegrees <= 33) {
      return "NNE";
    } else if (windDegrees >= 34 && windDegrees <= 56) {
      return "NE";
    } else if (windDegrees >= 57 && windDegrees <= 78) {
      return "ENE";
    } else if (windDegrees >= 79 && windDegrees <= 101) {
      return "E";
    } else if (windDegrees >= 102 && windDegrees <= 123) {
      return "ESE";
    } else if (windDegrees >= 124 && windDegrees <= 146) {
      return "SE";
    } else if (windDegrees >= 147 && windDegrees <= 168) {
      return "SSE";
    } else if (windDegrees >= 169 && windDegrees <= 191) {
      return "S";
    } else if (windDegrees >= 192 && windDegrees <= 213) {
      return "SSW";
    } else if (windDegrees >= 214 && windDegrees <= 236) {
      return "SW";
    } else if (windDegrees >= 237 && windDegrees <= 258) {
      return "WSW";
    } else if (windDegrees >= 259 && windDegrees <= 281) {
      return "W";
    } else if (windDegrees >= 282 && windDegrees <= 303) {
      return "WNW";
    } else if (windDegrees >= 304 && windDegrees <= 326) {
      return "NW";
    } else if (windDegrees >= 327 && windDegrees <= 348) {
      return "NNW";
    } else {
      return "N";
    }
  }
}
// 3. take searchbox value and add it to apiURL, use axios to get aprURL then send to displaytemperature
function search(city) {
  let apiKey = "bf5fabfdc76e9febd628bad10917226b";
  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`;
  axios.get(apiUrl).then(displayTemperature);
}

// 2. take event, prevents page reload, define searchbox, send searchbox value to search
function handleSubmit(event) {
  event.preventDefault();
  let searchBox = document.querySelector("#city-search-box");
  if (searchBox.value !== null) {
    search(searchBox.value);
  } else {
    null;
  }
}
// 1. set form and listen for submit on the form
let form = document.querySelector("#search-city");
form.addEventListener("submit", handleSubmit);

//change temp and wind to imperial

let tempNumber = document.querySelector("#temp");
let windNumber = document.querySelector("#wind-speed");

function changeImperial() {
  let tempUnitElement = document.querySelector("#temp-unit");
  if (tempUnitElement.innerHTML.includes("C")) {
    tempUnitElement.innerHTML = "°F";
    tempNumber.innerHTML = Math.round((tempNumber.innerHTML * 9) / 5 + 32);
    windNumber.innerHTML = Math.round(windNumber.innerHTML * 1.6);
  } else {
    null;
  }
}

function changeMetric() {
  let tempUnitElement = document.querySelector("#temp-unit");
  if (tempUnitElement.innerHTML.includes("F")) {
    tempUnitElement.innerHTML = "°C";
    tempNumber.innerHTML = Math.round(((tempNumber.innerHTML - 32) * 5) / 9);
    windNumber.innerHTML = Math.round(windNumber.innerHTML / 1.6);
  } else {
    null;
  }
}

let metricButton = document.querySelector("#c");
metricButton.addEventListener("click", changeMetric);

let imperialButton = document.querySelector("#f");
imperialButton.addEventListener("click", changeImperial);

search("New York");
